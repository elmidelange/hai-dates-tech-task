name: Continuous Integration Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.8', '3.9', '3.10']
        poetry-version: ['1.1.13']
        include:
          - os: windows-latest
            python-version: '3.8'
            poetry-version: '1.1.13'
          - os: macos-latest
            python-version: '3.8'
            poetry-version: '1.1.13'

    timeout-minutes: 10

    steps:
    - name: Check out code repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies and package
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Test with pytest
      run: |
        python -m poetry run python -m pytest

  coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
        poetry-version: ['1.1.13']
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    timeout-minutes: 10

    steps:
    - name: Check out code repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Generate coverage report
      run: |
        python -m poetry run python -m pytest --cache-clear --cov=dates tests/ > pytest-coverage.txt

    - name: Comment coverage on PR
      uses: coroo/pytest-coverage-commentator@v1.0.2

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9']
        poetry-version: ['1.1.13']
    env:
      OS: ${{ matrix.os }}
      PYTHON: ${{ matrix.python-version }}
    timeout-minutes: 10

    steps:
    - name: Check out code repository
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}

    - name: Install dependencies
      shell: bash
      run: python -m poetry install

    - name: Lint with pylint
      run: |
        poetry run pylint dates

    - name: Run Black check
      uses: psf/black@stable

    - name: Check type hints with mypy
      run: |
        poetry run mypy --strict dates
